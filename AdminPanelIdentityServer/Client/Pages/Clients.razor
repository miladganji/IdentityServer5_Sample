@page "/client"
@inject IGRPCservice _gRPCservice
<EditForm Model="client" OnValidSubmit="AddClientData">
	<DataAnnotationsValidator />
	<div class="form-group col-4">
		<label>Client Id :</label>
		<InputText @bind-Value="client.ClientId" class="form-control" placeholder="Client Id"></InputText>
		<ValidationMessage For="@(()=>client.ClientId)"></ValidationMessage>
	</div>

	<div class="form-group col-4">
		<label>Client Secret :</label>
		<InputText @bind-Value="client.ClientSecrets" class="form-control" placeholder="Client Secret"></InputText>
		<ValidationMessage For="@(()=>client.ClientSecrets)"></ValidationMessage>
	</div>

	<div class="form-group col-4">
		<label>Client Name :</label>
		<InputText @bind-Value="client.ClientName" class="form-control" placeholder="Client Name"></InputText>
		<ValidationMessage For="@(()=>client.ClientName)"></ValidationMessage>
	</div>

	<div class="form-group col-4">
		<label>Client RedirectUris :</label>
		<InputText @bind-Value="client.RedirectUris" class="form-control" placeholder="Client RedirectUris"></InputText>
		<ValidationMessage For="@(()=>client.RedirectUris)"></ValidationMessage>
	</div>

	<div class="form-group col-4">
		<label>Client PostLogoutRedirectUris :</label>
		<InputText @bind-Value="client.PostLogoutRedirectUris" class="form-control" placeholder="Client PostLogoutRedirectUris"></InputText>
		<ValidationMessage For="@(()=>client.PostLogoutRedirectUris)"></ValidationMessage>
	</div>

	<div class="form-group col-4">
		<label>Client AllowedCorsOrigins :</label>
		<InputText @bind-Value="client.AllowedCorsOrigins" class="form-control" placeholder="Client AllowedCorsOrigins"></InputText>
		<ValidationMessage For="@(()=>client.AllowedCorsOrigins)"></ValidationMessage>
	</div>
	

	<button type="submit" class="btn btn-success">Send Data</button>
</EditForm>
@code {

	public ClientDto client { get; set; } = new ClientDto();


	public async Task AddClientData()
	{
		try
		{
			var res = await _gRPCservice.AddClient(client);
		}
		catch (Exception ex)
		{

			Console.WriteLine(ex.Message);        }

		Console.WriteLine(client.ClientName);
	}
}
